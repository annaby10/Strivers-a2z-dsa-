public class StackLinkedList {

    // Node class representing each element in the stack
    static class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    // Stack class using linked list
    static class Stack {
        Node top;  // Points to the top of the stack

        // Check if the stack is empty
        public boolean isEmpty() {
            return top == null;
        }

        // Push data onto the stack
        public void push(int data) {
            Node newNode = new Node(data);
            newNode.next = top;
            top = newNode;
        }

        // Pop the top data off the stack
        public int pop() {
            if (isEmpty()) {
                System.out.println("Stack Underflow!");
                return -1;  // Or throw exception
            }
            int popped = top.data;
            top = top.next;
            return popped;
        }

        // Peek at the top element
        public int peek() {
            if (isEmpty()) {
                System.out.println("Stack is empty!");
                return -1;
            }
            return top.data;
        }
    }

    public static void main(String[] args) {
        Stack s = new Stack();

        s.push(10);
        s.push(20);
        s.push(30);

        System.out.println("Top element: " + s.peek());

        while (!s.isEmpty()) {
            System.out.println("Popped: " + s.pop());
        }

        System.out.println("Is stack empty? " + s.isEmpty());
    }
}
