Given a string s and an integer k, return the length of the longest substring you can get by replacing at most k characters to make all characters in the substring the same.

class Solution {
    public int characterReplacement(String s, int k) {
        int[] count = new int[26];  // frequency of characters
        int left = 0, maxCount = 0, maxLength = 0;

        for (int right = 0; right < s.length(); right++) {
            count[s.charAt(right) - 'A']++;
            maxCount = Math.max(maxCount, count[s.charAt(right) - 'A']);

            // If the remaining chars to make all same > k â†’ shrink window
            while ((right - left + 1) - maxCount > k) {
                count[s.charAt(left) - 'A']--;
                left++;
            }

            maxLength = Math.max(maxLength, right - left + 1);
        }

        return maxLength;
    }
}
