// Q.Given a string s, find the length of the longest substring without repeating characters.

import java.util.HashSet;

public class Solution {
    public static String Longestsubstring(String s) {
        int left = 0;
        int maxlen = 0;
        int startindex = 0;
        HashSet<Character> set = new HashSet<>();

        for (int right = 0; right < s.length(); right++) {
            while (set.contains(s.charAt(right))) {
                set.remove(s.charAt(left));
                left++;
            }

            set.add(s.charAt(right));

            if (right - left + 1 > maxlen) {
                maxlen = right - left + 1;
                startindex = left;
            }
        }

        return s.substring(startindex, startindex + maxlen);
    }

    public static void main(String[] args) {
        String result = Longestsubstring("abcaabcbb");
        System.out.println("Longest substring without repeating characters: " + result);
    }
}
