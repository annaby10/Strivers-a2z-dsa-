You're given:
An array start[] = {1, 3, 0, 5, 8, 5} ,An array end[] = {2, 4, 6, 7, 9, 9}
Each index i represents an activity that starts at start[i] and ends at end[i].You have to choose the maximum number of activities that don't overlap, i.e., if you pick one activity, the next activity you choose should start after or exactly when the last one ends.

import java.util.ArrayList;

public class Solution {
    
    public static void main(String[] args){
        int[] start ={1,3,0,5,8,5};
        int[] end = {2,4,6,7,9,9};

        //Sorting
        int activities[] = new int[start.length][3];
        for(int i=0;i<start.length;i++){
        activities[i][0]=i;
        activities[i][1]=start[i];
        activities[i][2]=end[i];
        }

        //Lambda function for sorting
        Arrays.sort(activities,Comparator.comparingDouble(o -> o[2]));

        //endtime basis sorted
        int maxAct=0;
        ArrayList<Integer>ans= new ArrayList<>();

        //1st Activity
        maxAct=1;
        ans.add(activities[0][0]);
        int lastEnd= activities[0][2];
        for(int i=1;i<end.length;i++){
            if (activities[0][1]>=lastEnd){
                //activity select
                maxAct++;
                ans.add(activities[i][0]);
                lastEnd = activities[i][2];
            }
        }
        System.out.println("Max activities : "+maxAct);
        for(int i=0;i<ans.size();i++){
            System.out.println("A"+ans.get(i)+"");
        }
        System.out.println(null);
    }
}
